// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(cuid())
  firstname            String
  lastname             String
  email                String    @unique
  phone                String?
  password             String
  role                 UserRole  @default(Farmer)
  profileInfo          String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  lastLogin            DateTime? @default(now())
  isActive             Boolean   @default(true)
  loginAttempts        Int?      @default(0)
  lockoutUntil         DateTime?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  passwordChangedAt    DateTime?
  verificationToken    String?
  tokenExpires         DateTime?
  isVerified           Boolean   @default(false)
  refreshToken         String?
  farms                Farm[]
}

model Farm {
  id          String     @id @default(cuid())
  farmName    String
  location    String
  size        Float
  farmType    String
  isActive    Boolean    @default(true)
  description String?
  ownerId     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  owner       User       @relation(fields: [ownerId], references: [id])
  records     Record[]
  sales       Sale[]
  reminders   Reminder[]
}

model Record {
  id              String   @id @default(cuid())
  farmId          String
  date            DateTime @default(now())
  feedUsedKg      Float
  eggsCollected   Int
  birdsDied       Int
  birdsSold       Int
  expenses        Float
  mortialityCause String?
  photos          String[] @default([])
  notes           String?
  weatherInfo     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  farm            Farm     @relation(fields: [farmId], references: [id])
}

model Sale {
  id        String   @id @default(cuid())
  farmId    String
  date      DateTime @default(now())
  product   String
  quantity  Int
  unitPrice Float
  buyerName String?
  revenue   Float
  notes     String?
  createdAt DateTime @default(now())
  farm      Farm     @relation(fields: [farmId], references: [id])
}

model Reminder {
  id          String   @id @default(cuid())
  farmId      String
  title       String
  type        String
  dueDate     DateTime
  isCompleted Boolean  @default(false)

  farm Farm @relation(fields: [farmId], references: [id])
}

enum UserRole {
  Farmer
  FarmerAssistant
}
